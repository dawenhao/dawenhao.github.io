(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{504:function(t,a,s){"use strict";s.r(a);var r=s(4),i=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"几何介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几何介绍"}},[t._v("#")]),t._v(" 几何介绍")]),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh1.png"}}),t._v("几何")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh2.png"}}),t._v("曲面的几何")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh3.png"}}),t._v("复杂的几何")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh4.png"}}),t._v("布料")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh5.png"}}),t._v("水滴模拟")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh6.png"}}),t._v("巨型城市")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh7.png"}}),t._v("毛发")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh8.png"}}),t._v("微观下的复杂几何")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh9.png"}}),t._v("宏观下的复杂几何")])],1)])]),t._v(" "),s("h2",{attrs:{id:"几何的归类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几何的归类"}},[t._v("#")]),t._v(" 几何的归类")]),t._v(" "),s("p",[t._v("几何分为隐式几何和显示几何两种。使用哪种表示方法要根据实际需要。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh10.png",alt:"pic10",title:"几何的分类"}})]),t._v(" "),s("h3",{attrs:{id:"隐式几何表述-implicit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式几何表述-implicit"}},[t._v("#")]),t._v(" 隐式几何表述(Implicit)")]),t._v(" "),s("p",[t._v("  要表述一个几何的面，这里不会表示这些点具体在哪，而是表示这些点满足的关系，比如满足一定特定关系的点都认为在一个表面上。也就是说把这些点做一个归类。"),s("br"),t._v("\n  如图一，隐式几何可以通过一个函数找出这个几何在一个表面上的所有的点，有了这些点就可以把这个几何画出来。"),s("br"),t._v("\n  想要知道哪些点是在一个隐式几何上的，这是一个相对困难的事情。如图二，从一个式子上很难看出这是一个圆环。但是隐含的几何也有好处，比如判断一个点是不是在这个几何上是一个很简单的事情，只需要把这个点带入到关系式里，会得到一个正的或者负的或者是0的一个值，如果结果是0我们就认为这个点在表面上，如果是负的就认为这个点在物体内，如果是正的就认为这个点在物体外。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh11.png"}}),t._v("隐式几何（图一）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh12.png"}}),t._v("隐式几何（图二）")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"显示几何表述-explicit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示几何表述-explicit"}},[t._v("#")]),t._v(" 显示几何表述(Explicit)")]),t._v(" "),s("p",[t._v("  显示的几何表示要么直接给出顶点，要么通过参数映射的方式给出。"),s("br"),t._v("\n  三角形面就是一个典型显示几何的表示方法。"),s("br"),t._v("\n  通过参数映射的方法定义的表面，如图一，定义了空间"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"u"}})],1)],1)],1),t._v("和"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"v"}})],1)],1)],1),t._v("，上面有任意的点，并且定义了每个点"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"u"}})],1)],1)],1),t._v("，"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"v"}})],1)],1)],1),t._v("都会对应空间中的某一个点，即给定一个函数输入"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"u"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"v"}})],1)],1)],1),t._v("输出的是"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"x"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"y"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"z"}})],1)],1)],1),t._v("，把所有的"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"u"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"v"}})],1)],1)],1),t._v("遍历一遍，就能找到所有对应的"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"x"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"y"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"z"}})],1)],1)],1),t._v("。"),s("br"),t._v("\n  对于显示的几何表示，想要判断某个点是否在表面上，就比较困难。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh13.png"}}),t._v("马鞍面（图一）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh14.png"}}),t._v("采样简单（图二）")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh15.png"}}),t._v("显示几何（图三）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh16.png"}}),t._v("显示几何（图四）")])],1)])])],1),t._v(" "),s("h2",{attrs:{id:"隐式几何"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式几何"}},[t._v("#")]),t._v(" 隐式几何")]),t._v(" "),s("p",[t._v("对于一些简单的几何使用隐式方式表述的非常到位，但是对于复杂的几何就会很困难。"),s("br"),t._v("\n  CSG图二，是通过一些基本几何的基本运算(bool运算)来定义一个新的几何，就可以得到一些复杂的几何。"),s("br"),t._v("\n  距离函数图三，对于任何一个几何都不直接去描述表面，而是描述任何一个点到这个表面的最近距离。通过对几何的距离函数做融合可以形成图三的效果。所谓距离函数，是指空间中的任何一个点到你想要表述的这个几何形体上面的任意一个点它们之间的最小距离（可以是正的也可以是负的）。"),s("br"),t._v("\n  图四中，输入（A）和输出（B）是两张不同的图，斜线部分是一个物体挡住了视口的一部分，在A中挡住了三分之一，经过一定的移动后挡住了B中的三分之二，这里希望求得这个物体从左至右（从A到B）的移动的中间状态，那么实际得到的中间状态左边是被挡住的而中间部分只能被挡住一半（灰色，黑白的融合），把两张图做这样一个线性融合，并不能表述这个物体的运动信息，因为我们希望得到的结果是左边一半是黑的，右边一半是白的。"),s("br"),t._v("\n  怎么才能做对呢？首先对A求得一个距离函数，同时对B也做距离函数，所谓距离函数就是任何一个点到这个边的最短距离，这里就是对这条边做垂线，然后把这两张图做一个融合操作，那么正中间的一定是个0，左边是负的右边是正的。0的地方是边界，非0的地方不是。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh17.png"}}),t._v("数学公式表述，图一")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh18.png"}}),t._v("CSG，图二")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh19.png"}}),t._v("距离函数，图三")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh20.png"}}),t._v("距离函数，图四")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh21.png"}}),t._v("两个物体做融合，图五")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"水平集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#水平集"}},[t._v("#")]),t._v(" 水平集")]),t._v(" "),s("p",[t._v("  得到距离函数后怎么恢复原来的表面，这里就把它对应0的部分全都找出来。有时距离函数不好用一个式子表示出来，水平集就是一种表示距离函数的形式。"),s("br"),t._v("\n  水平集也可以定义在三维上，比如应用在医学上，物理上。")]),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh22.png"}}),t._v("水平集")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh23.png"}}),t._v("医学上使用水平集")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh24.png"}}),t._v("物理模拟使用水平集")])],1)])]),t._v(" "),s("h3",{attrs:{id:"分型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分型"}},[t._v("#")]),t._v(" 分型")]),t._v(" "),s("p",[t._v("  分型指自相似，意思是物体的整体和它的一部分非常相似，有点类似计算机中的递归。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh25.png",alt:"pic25",title:"分型"}})]),t._v(" "),s("h2",{attrs:{id:"显示几何"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示几何"}},[t._v("#")]),t._v(" 显示几何")]),t._v(" "),s("p",[t._v("显示几何的表示方法有很多种。")]),t._v(" "),s("ul",[s("li",[t._v("三角形面")]),t._v(" "),s("li",[t._v("贝塞尔曲面")]),t._v(" "),s("li",[t._v("细分曲面")]),t._v(" "),s("li",[t._v("点云")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/pic/games101/jihe/jh26.png",alt:"pic26",title:"显示几何"}})]),t._v(" "),s("h3",{attrs:{id:"点云"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点云"}},[t._v("#")]),t._v(" 点云")]),t._v(" "),s("p",[t._v("  点云不考虑物体是一个表面，而是表面上的一堆点，只要这些点足够细，自然就看不到点与点之间的缝隙，一个点就是空间中的一个"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"("}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"x"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"y"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"z"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。如果点比较稀疏，就看不出是一个面。一般扫描物体后会得到一个点云，而后会把点云转化成多边形面。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh27.png",alt:"pic27",title:"点云"}})],1),t._v(" "),s("h3",{attrs:{id:"多边形面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多边形面"}},[t._v("#")]),t._v(" 多边形面")]),t._v(" "),s("p",[t._v("  在图形学中得到了非常广泛的应用，特别是三角形和四边形面。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh28.png",alt:"pic28",title:"多边形网格(polygon mesh)"}})]),t._v(" "),s("h2",{attrs:{id:"曲线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曲线"}},[t._v("#")]),t._v(" 曲线")]),t._v(" "),s("p",[t._v("曲线的应用很广，如相机移动轨迹、动画曲线，可以让三维空间中的一个模型沿着这个曲线去运动、字体。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh29.png"}}),t._v("相机轨迹")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh30.png"}}),t._v("动画曲线")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh31.png"}}),t._v("字体（使用贝塞尔曲线）")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"贝塞尔曲线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲线"}},[t._v("#")]),t._v(" 贝塞尔曲线")]),t._v(" "),s("p",[t._v("  贝塞尔曲线，是一种显示的几何表示方法。它是要用一系列的控制点来定义某一个曲线。我们要求贝塞尔曲线要经过控制点的起止点。GAMES101 P11 13:01。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh32.webp",alt:"pic32",title:"贝塞尔曲线"}})]),t._v(" "),s("h3",{attrs:{id:"二次贝塞尔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二次贝塞尔"}},[t._v("#")]),t._v(" 二次贝塞尔")]),t._v(" "),s("p",[t._v("  有三个控制点的贝塞尔曲线叫做二次被贝塞尔曲线。这条线一定是从b0开始b2结束，而b1就决定了这条曲线怎么弯曲。假设这条曲线它的起点在时间0，终点为时间1，那么给定一个时间t就可以找到一个点。在每一段都能找到对应的点，然后如果有多个点就连起来继续往下找在时间t的时候得到的点。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh33.png",alt:"pic33",title:"二次贝塞尔"}})]),t._v(" "),s("h3",{attrs:{id:"三次贝塞尔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次贝塞尔"}},[t._v("#")]),t._v(" 三次贝塞尔")]),t._v(" "),s("p",[t._v("  三次贝塞尔与二次贝塞尔操作一致，只不过控制点增加了。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh34.png",alt:"pic34",title:"三次贝塞尔"}})]),t._v(" "),s("h3",{attrs:{id:"贝塞尔曲线的代数表示方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲线的代数表示方法"}},[t._v("#")]),t._v(" 贝塞尔曲线的代数表示方法")]),t._v(" "),s("p",[t._v("  GAMES101 P11 21:57。")]),t._v(" "),s("h3",{attrs:{id:"贝塞尔曲线的性质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲线的性质"}},[t._v("#")]),t._v(" 贝塞尔曲线的性质")]),t._v(" "),s("p",[t._v("  贝塞尔曲线有一些不错的性质。")]),t._v(" "),s("ul",[s("li",[t._v("规定必须过起点和终点，t=0的时候一定在起点，t=1的时候一定在终点。")]),t._v(" "),s("li",[t._v("三次贝塞尔曲线（四个控制点），起始的切线方向和终止切线方向一致都是3。")]),t._v(" "),s("li",[t._v("仿射变换下直接对顶点做仿射变换，直接对变换后的顶点画一条贝塞尔。")]),t._v(" "),s("li",[t._v("凸包性质\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh35.png"}}),t._v("贝塞尔性质")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh36.png"}}),t._v("凸包性质")])],1)])])])]),t._v(" "),s("h3",{attrs:{id:"逐段的贝塞尔曲线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逐段的贝塞尔曲线"}},[t._v("#")]),t._v(" 逐段的贝塞尔曲线")]),t._v(" "),s("p",[t._v("  如果控制点非常多，那么如果其中一个控制点发生了改变，整条曲线就发生了改变。于是，有了一个想法，用很少的控制点描述一段贝塞尔曲线，然后把很多段连接起来。这里更多的是用四个控制点控制一个贝塞尔曲线。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh37.png",alt:"pic37",title:"逐段的贝塞尔"}})]),t._v(" "),s("h3",{attrs:{id:"样条曲线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样条曲线"}},[t._v("#")]),t._v(" 样条曲线")]),t._v(" "),s("p",[s("img",{attrs:{src:"/pic/games101/jihe/jh38.png",alt:"pic38",title:"样条曲线"}})]),t._v(" "),s("h2",{attrs:{id:"曲面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曲面"}},[t._v("#")]),t._v(" 曲面")]),t._v(" "),s("p",[t._v("曲面是一种显示的几何表示。\n"),s("img",{attrs:{src:"/pic/games101/jihe/jh39.png",alt:"pic39",title:"曲面"}})]),t._v(" "),s("h3",{attrs:{id:"贝塞尔曲面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲面"}},[t._v("#")]),t._v(" 贝塞尔曲面")]),t._v(" "),s("p",[t._v("  由4x4个控制点，在两个方向上分别应用贝塞尔曲线。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh40.png",alt:"pic40",title:"贝塞尔曲面"}})]),t._v(" "),s("p",[t._v("  两个方向需要两个时间t，这里用uv表示。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh41.png"}}),t._v("贝塞尔曲面")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh42.png"}}),t._v("贝塞尔曲面")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"可以对曲面做的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以对曲面做的操作"}},[t._v("#")]),t._v(" 可以对曲面做的操作")]),t._v(" "),s("ul",[s("li",[t._v("曲面细分(Mesh Subdivision)")]),t._v(" "),s("li",[t._v("网格简化(Mesh Simplification)")]),t._v(" "),s("li",[t._v("网格规则化(Mesh Regularization)\n"),s("img",{attrs:{src:"/pic/games101/jihe/jh43.png",alt:"pic43",title:"网格"}})])]),t._v(" "),s("h3",{attrs:{id:"曲面细分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曲面细分"}},[t._v("#")]),t._v(" 曲面细分")]),t._v(" "),s("p",[t._v("  原始的曲面的三角形比较少，增加三角形。就像把一个图像增加分辨率。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh44.png",alt:"pic44",title:"曲面细分"}})]),t._v(" "),s("h3",{attrs:{id:"曲面简化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曲面简化"}},[t._v("#")]),t._v(" 曲面简化")]),t._v(" "),s("p",[t._v("  如果有个网格非常复杂，在远处看的时候其实不需要这么复杂的网格。就要有一些方法去掉一些三角形。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh45.png",alt:"pic45",title:"网格简化"}})]),t._v(" "),s("h3",{attrs:{id:"网格规则化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网格规则化"}},[t._v("#")]),t._v(" 网格规则化")]),t._v(" "),s("p",[t._v("  模型上的三角形可能有大有小，对渲染可能会造成一些不便，对三角形做一些正规化。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh46.png",alt:"pic46",title:"网格规则化"}})]),t._v(" "),s("h2",{attrs:{id:"细分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#细分"}},[t._v("#")]),t._v(" 细分")]),t._v(" "),s("p",[t._v("说到细分第一反应是引入更多的三角形，而细分实际做了两件事，第一，在原三角形上分出更多的三角形。第二，让三角形的位置发生变化，使得原来的模型变得更加的光滑。")]),t._v(" "),s("h3",{attrs:{id:"loop细分-只能对三角形做细分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loop细分-只能对三角形做细分"}},[t._v("#")]),t._v(" Loop细分（只能对三角形做细分）")]),t._v(" "),s("p",[t._v("  对于loop细分，一个三角形连接三角形的三个中点，最终得到四个三角形。这里提示一点，loop细分不可以理解为循环细分，这个名字是因为发明这个细分的人姓loop，和循环没有任何关系。"),s("br"),t._v("\n  loop细分会把新的顶点和旧的顶点区分开，用不同的方法去修改新旧顶点的位置。如图一"),s("br"),t._v("\n  那么如何调整这些三角形顶点的位置呢？如图二，对于新的顶点，首先新的顶点一定在一条边上，只要这条边表示的不是物体的边界，那么它一定会被不同的三角形共享，把共享的两条边叫AB，三角形不共享的顶点叫做CD。Loop细分的规则是，3/8的A+B加上1/8的C+D。得到新的白点。"),s("br"),t._v("\n  对于旧的顶点，如图三，首先定义一个顶点的度，顶点的度就是顶点连接的边的数量，再定义一个u。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh47.png"}}),t._v("Loop细分（图一）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh48.png"}}),t._v("Loop细分（图二）")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh49.png"}}),t._v("Loop细分（图三）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh50.png"}}),t._v("Loop细分（图四）")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"catmull-clark细分-可以做普通的mesh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#catmull-clark细分-可以做普通的mesh"}},[t._v("#")]),t._v(" Catmull-Clark细分(可以做普通的mesh)")]),t._v(" "),s("p",[t._v("  首先定义四边形面(quad face)和非四边形面(Non-quad face)，然后定义一个奇异点(Extraordinary vertex)，奇异点即是度不为4。要做细分肯定要引入更多的点和边然后调整它们的位置。首先每条边都取中点，每个面也取中点，然后把边上的中点和面上的中点连起来，如图二。"),s("br"),t._v("\n  Catmull-Clark细分在细分之前如果有多少个非四边形面在一次细分之后都会变成多少个奇异点。没有非四边形面后再做细分不会增加新的奇异点。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh51.png"}}),t._v("Catmull-Clark细分（图一）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh52.png"}}),t._v("Catmull-Clark细分（图二）")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh53.png"}}),t._v("Catmull-Clark细分（图三）")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh54.png"}}),t._v("Catmull-Clark细分（图四）")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"catmull-clark细分顶点更新规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#catmull-clark细分顶点更新规则"}},[t._v("#")]),t._v(" Catmull-Clark细分顶点更新规则")]),t._v(" "),s("p",[s("img",{attrs:{src:"/pic/games101/jihe/jh55.png",alt:"pic55",title:"Catmull-Clark细分顶点更新规则"}})]),t._v(" "),s("h3",{attrs:{id:"细分案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#细分案例"}},[t._v("#")]),t._v(" 细分案例")]),t._v(" "),s("p",[s("img",{attrs:{src:"/pic/games101/jihe/jh56.png",alt:"pic56",title:"细分案例"}})]),t._v(" "),s("h2",{attrs:{id:"曲面简化-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曲面简化-2"}},[t._v("#")]),t._v(" 曲面简化")]),t._v(" "),s("p",[t._v("不同的情况下选用不同复杂的几何模型。比如物体离得远的时候，用三角比较少的网格。与MipMap相关。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh57.png",alt:"pic57",title:"曲面简化"}})]),t._v(" "),s("h3",{attrs:{id:"边坍缩-collapsing-an-edge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#边坍缩-collapsing-an-edge"}},[t._v("#")]),t._v(" 边坍缩(Collapsing An Edge)")]),t._v(" "),s("p",[t._v("  边坍缩通俗来讲就是找到一条边，连着两个顶点，然后把两个顶点一捏，边不存在了，这个操作就是边坍缩。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh58.png",alt:"pic58",title:"边坍缩"}})]),t._v(" "),s("h3",{attrs:{id:"二次误差度量-quadric-error-metrics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二次误差度量-quadric-error-metrics"}},[t._v("#")]),t._v(" 二次误差度量(Quadric Error Metrics)")]),t._v(" "),s("p",[t._v("  GAMES101 P12 39:09"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/jihe/jh59.png",alt:"pic59",title:"二次误差度量"}})]),t._v(" "),s("h3",{attrs:{id:"使用二次误差度量坍缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用二次误差度量坍缩"}},[t._v("#")]),t._v(" 使用二次误差度量坍缩")]),t._v(" "),s("p",[t._v("  每一条边都可以假设如果坍缩它会有多大的二次误差度量。从小开始一个一个做坍缩。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh60.png"}}),t._v("使用二次误差度量坍缩")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/jihe/jh61.png"}}),t._v("使用二次误差度量坍缩")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"实际的曲面简化案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际的曲面简化案例"}},[t._v("#")]),t._v(" 实际的曲面简化案例")]),t._v(" "),s("p",[s("img",{attrs:{src:"/pic/games101/jihe/jh62.png",alt:"pic62",title:"二次误差度量"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);