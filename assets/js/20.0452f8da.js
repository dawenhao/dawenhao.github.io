(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{504:function(t,a,s){"use strict";s.r(a);var m=s(4),c=Object(m.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是光栅化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是光栅化"}},[t._v("#")]),t._v(" 什么是光栅化")]),t._v(" "),s("p",[t._v("在做完观测矩阵之后，所有的物体都已经在经典的"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"2212"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-msup",[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1),s("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[s("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"3"}})],1)],1)],1)],1)],1),t._v("空间里，下一步要把它画在屏幕上，怎么画就是光栅化。")],1),t._v(" "),s("h2",{attrs:{id:"mvp之后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvp之后"}},[t._v("#")]),t._v(" MVP之后")]),t._v(" "),s("h3",{attrs:{id:"屏幕"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#屏幕"}},[t._v("#")]),t._v(" 屏幕")]),t._v(" "),s("p",[t._v("  在图形学中定义为")]),t._v(" "),s("ul",[s("li",[t._v("一个像素的数组")]),t._v(" "),s("li",[t._v("数组的大小就是分辨率例如(1920x1080)")]),t._v(" "),s("li",[t._v("典型的光栅成像设备(raster)")])]),t._v(" "),s("h3",{attrs:{id:"像素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#像素"}},[t._v("#")]),t._v(" 像素")]),t._v(" "),s("ul",[s("li",[t._v("本课程认为像素就是一个一个的小方块。")]),t._v(" "),s("li",[t._v("颜色由红、绿、蓝组成。")])]),t._v(" "),s("h3",{attrs:{id:"屏幕空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#屏幕空间"}},[t._v("#")]),t._v(" 屏幕空间")]),t._v(" "),s("ul",[s("li",[t._v("屏幕的左下角为屏幕的原点，向右为X，向上为Y")]),t._v(" "),s("li",[t._v("每个小方块的坐标为小方块左下角的坐标")]),t._v(" "),s("li",[t._v("每个屏幕的分辨率认为是width*height")]),t._v(" "),s("li",[t._v("像素的中心为(x+0.5, y+0.5)")]),t._v(" "),s("li",[t._v("整个屏幕宽度为"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"0"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"w"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"i"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"d"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v("，高度为"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"0"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"e"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"i"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"g"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/guangshanhua1.png",alt:"pic1",title:"屏幕空间"}})],1)]),t._v(" "),s("h2",{attrs:{id:"视口变换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视口变换"}},[t._v("#")]),t._v(" 视口变换")]),t._v(" "),s("p",[t._v("  把像素从"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"2212"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-msup",[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1),s("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[s("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1),t._v("的（先不管Z）变换到"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"0"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"w"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"i"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"d"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v("x"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"0"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"e"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"i"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"g"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"h"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/guangshanhua2.png",alt:"pic2",title:"视口变换"}})],1),t._v(" "),s("h3",{attrs:{id:"视口变换矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视口变换矩阵"}},[t._v("#")]),t._v(" 视口变换矩阵")]),t._v(" "),s("p",[t._v("  视口变换矩阵如下，宽度上变成width，高度上变成height。原本宽度为2，高度也为2，所以把原来的宽高除以2再相应乘上width和height就得到了结果。"),s("br"),t._v("\n  原本中心在(0,0)，要得到对应的中心点，就是宽度除以2，高度除以2。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/guangshanhua3.png",alt:"pic3",title:"视口变换2"}})]),t._v(" "),s("h2",{attrs:{id:"光栅化成像设备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#光栅化成像设备"}},[t._v("#")]),t._v(" 光栅化成像设备")]),t._v(" "),s("p",[t._v("具体看GAMES101 P5")]),t._v(" "),s("h2",{attrs:{id:"光栅化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[t._v("#")]),t._v(" 光栅化")]),t._v(" "),s("h3",{attrs:{id:"三角网格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三角网格"}},[t._v("#")]),t._v(" 三角网格")]),t._v(" "),s("p",[t._v("  三角形可以表示在三维空间中不同的面，三角形也可以表示在二维空间不同的图形。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/guangshanhua4.png"}})])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/guangshanhua5.png"}})])],1)])])]),t._v(" "),s("h3",{attrs:{id:"三角形的性质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三角形的性质"}},[t._v("#")]),t._v(" 三角形的性质")]),t._v(" "),s("ul",[s("li",[t._v("三角形是最最基础的多边形")]),t._v(" "),s("li",[t._v("任何其他的多边形，都可以被拆解成三角形")]),t._v(" "),s("li",[t._v("三角形一定是一个平面")]),t._v(" "),s("li",[t._v("三角形对于内外的定义是非常清晰的")]),t._v(" "),s("li",[t._v("三角形顶点确定后，三角形内部任何一个点的属性可以通过插值计算出来\n"),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh6.png",alt:"pic6",title:"三角性质"}})])]),t._v(" "),s("h3",{attrs:{id:"采样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#采样"}},[t._v("#")]),t._v(" 采样")]),t._v(" "),s("p",[t._v("  所谓采样，就是给一个连续的函数，在不同的地方问函数的值是什么。这里说的采样是指利用像素的中心，对屏幕空间进行采样。"),s("br"),t._v("\n  采样不仅可以发生在不同的位置，它也可以发生在不同的时间。")]),t._v(" "),s("h3",{attrs:{id:"如何判断点是否在三角形内"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断点是否在三角形内"}},[t._v("#")]),t._v(" 如何判断点是否在三角形内")]),t._v(" "),s("p",[t._v("  做三次叉乘，可以得到某点是否在三角形内部。")]),t._v(" "),s("ol",[s("li",[s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"1.001em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1)],1),t._v("叉乘"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"0.771em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"1"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"Q"}})],1)],1)],1)],1)],1)],1)],1)],1),t._v(" "),s("li",[s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"1.001em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"2"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"3"}})],1)],1)],1)],1)],1)],1)],1),t._v("叉乘"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"0.771em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"2"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"Q"}})],1)],1)],1)],1)],1)],1)],1)],1),t._v(" "),s("li",[s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"1.001em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"3"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1)],1)],1)],1),t._v("叉乘"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-TeXAtom",[s("mjx-mover",[s("mjx-over",{staticStyle:{"padding-bottom":"0.06em","padding-left":"0.771em","margin-bottom":"-0.516em"}},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"20D7"}})],1)],1),s("mjx-base",[s("mjx-mrow",[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"P"}})],1),s("mjx-mn",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"3"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"Q"}})],1)],1)],1)],1)],1)],1)],1),s("br"),t._v("\n  以上三步要么全部大于0要么全部小于0，则这样可以判断某个点在三角形内，否则在三角形外。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh7.png",alt:"pic7",title:"判断点是否在三角形内"}}),t._v("\n  特殊的，如果某个点正好在三角形的边界上，这种点要么不做处理，要么特殊处理。本课程不做处理。")],1)]),t._v(" "),s("h3",{attrs:{id:"几种采样的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几种采样的方式"}},[t._v("#")]),t._v(" 几种采样的方式")]),t._v(" "),s("p",[t._v("  计算一个三角形的包围盒(AABB),遍历这个包围盒，来计算每个点是否需要被光栅化。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh8.png",alt:"pic8",title:"光栅化加速"}}),t._v("\n  对需要光栅化的三角形，每一行都找它的最左和最右。这样一个像素都不会多考虑。适用于一个旋转45°，又窄又长的三角形，这种三角形AABB比较大。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh9.png",alt:"pic9",title:"光栅化加速1"}})]),t._v(" "),s("h3",{attrs:{id:"走样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#走样"}},[t._v("#")]),t._v(" 走样")]),t._v(" "),s("p",[t._v("  采样，会产生一系列的问题(Sampling Artifacts 这里Artifacts翻译作瑕疵)。走样就是信号的速度变化的太快了，以至于采样的速度跟不上。走样会造成以下的现象。")]),t._v(" "),s("ul",[s("li",[t._v("锯齿")]),t._v(" "),s("li",[t._v("摩尔纹")]),t._v(" "),s("li",[t._v("车轮效应\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh10.png"}}),t._v(" 锯齿")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh11.png"}}),t._v(" 走样")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh12.png"}}),t._v(" 摩尔纹")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh13.png"}}),t._v(" 车轮效应")])],1)])])])]),t._v(" "),s("h3",{attrs:{id:"反走样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反走样"}},[t._v("#")]),t._v(" 反走样")]),t._v(" "),s("p",[t._v("  在采样之前对原始的信号先做一个模糊（滤波），然后采样模糊的三角形。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh14.png"}}),t._v(" 模糊信号")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh15.png"}}),t._v(" 锯齿")])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh16.png"}}),t._v(" 模糊信号后的图像")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh17.png"}}),t._v(" 模糊信号后的图像")])],1)])]),t._v("\n  不可以先采样再做滤波处理，这样得到的是一个糊掉的带有锯齿的图像。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh18.png",alt:"pic18",title:"模糊的锯齿"}})]),t._v(" "),s("h2",{attrs:{id:"频域-frequency-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#频域-frequency-domain"}},[t._v("#")]),t._v(" 频域(Frequency Domain)")]),t._v(" "),s("h3",{attrs:{id:"傅里叶变换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#傅里叶变换"}},[t._v("#")]),t._v(" 傅里叶变换")]),t._v(" "),s("p",[t._v("  傅里叶变换可以把一个函数拆成很多个正余弦函数的和。所谓傅里叶变换，就是把函数变成不同频率的段，并且把频率的段显示出来。"),s("br"),t._v("\n  傅里叶变换查看 GAMES101 P6 19:40"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh19.png",alt:"pic19",title:"傅里叶级数展开"}})]),t._v(" "),s("h3",{attrs:{id:"高频的信息需要更高频的采样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高频的信息需要更高频的采样"}},[t._v("#")]),t._v(" 高频的信息需要更高频的采样")]),t._v(" "),s("p",[t._v("  高频变化的信息如果没有使用更快的采样，得到的结果恢复出来的函数就会跟我们预想的结果有很大的偏差。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh20.png",alt:"pic20",title:"高频信息采样"}})]),t._v(" "),s("h3",{attrs:{id:"通过频率分析走样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过频率分析走样"}},[t._v("#")]),t._v(" 通过频率分析走样")]),t._v(" "),s("p",[t._v("  假如蓝色和黑色对应的是两个截然不同的函数，但是采样的结果却是相同的。同样的采样方法采样两种不同频率的函数，得出的结果我们无法区分它们，这就叫做走样。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh21.png",alt:"pic21",title:"通过频率分析走样"}})]),t._v(" "),s("h2",{attrs:{id:"滤波"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#滤波"}},[t._v("#")]),t._v(" 滤波")]),t._v(" "),s("p",[t._v("把某个特定的频率，把这些特定的频率删掉，就是滤波(就是去掉一系列的频率)。")]),t._v(" "),s("h3",{attrs:{id:"从时域到频域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从时域到频域"}},[t._v("#")]),t._v(" 从时域到频域")]),t._v(" "),s("p",[t._v("  傅里叶变换可以把一个函数从时域变到频域。"),s("br"),t._v("\n  右边图像的中心为低频信息，周围为高频的信息。在不同频率的位置上，有多少信息通过亮度来表示。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh22.png",alt:"pic22",title:"从时域到频域"}})]),t._v(" "),s("h3",{attrs:{id:"高通滤波"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高通滤波"}},[t._v("#")]),t._v(" 高通滤波")]),t._v(" "),s("p",[t._v("  应用高通滤波器，只有高频的信息可以通过，下图中在边界处信息会发生剧烈的变化，所以高通滤波器下的图片都是一些边界。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh23.png",alt:"pic23",title:"高通滤波"}})]),t._v(" "),s("h3",{attrs:{id:"低通滤波"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#低通滤波"}},[t._v("#")]),t._v(" 低通滤波")]),t._v(" "),s("p",[t._v("  应用低通滤波器，只有低频的信息可以通过，边界处的信息都去掉了，得到一个模糊的图片。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh24.png",alt:"pic24",title:"低通滤波"}})]),t._v(" "),s("h3",{attrs:{id:"卷积"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卷积"}},[t._v("#")]),t._v(" 卷积")]),t._v(" "),s("p",[t._v("  滤波=卷积=平均，时域上的乘积等于频域上的卷积。具体解释看GAMES101 P6 40:35")]),t._v(" "),s("h3",{attrs:{id:"从频率的角度看什么是采样与走样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从频率的角度看什么是采样与走样"}},[t._v("#")]),t._v(" 从频率的角度看什么是采样与走样")]),t._v(" "),s("p",[t._v("  采样就是重复原始信号的频谱。走样就是频谱在经过搬移的过程中发生了混叠。GAMES101 P6 51:40")]),t._v(" "),s("h3",{attrs:{id:"如何反走样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何反走样"}},[t._v("#")]),t._v(" 如何反走样")]),t._v(" "),s("ul",[s("li",[t._v("增加采样率，比如提升显示器的分辨率。")]),t._v(" "),s("li",[t._v("真正的反走样，先做模糊再做采样（先把高频信息拿掉，再采样）。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh25.png"}}),t._v(" 如何反走样")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh26.png"}}),t._v(" 模糊信号")])],1)])])])]),t._v(" "),s("h2",{attrs:{id:"超采样抗锯齿-msaa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超采样抗锯齿-msaa"}},[t._v("#")]),t._v(" 超采样抗锯齿(MSAA)")]),t._v(" "),s("p",[t._v("对于任何一个像素，我们认为一个像素被划分成了一些小的像素。假如每个小的像素有中心，就可以判断这些点是否在三角形内，然后把结果做一个平均，就是对像素覆盖区域的一个近似。"),s("br"),t._v("\n  MSAA不是靠提升分辨率解决走样问题，增加采样点是为了近似一个合理的三角形覆盖率，并没有真的提高屏幕的分辨率。使用MSAA会增加计算量。\n"),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh27.png"}})])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh28.png"}})])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh29.png"}})])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh30.png"}})])],1)]),t._v(" "),s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh31.png"}})])],1)])])]),t._v(" "),s("h3",{attrs:{id:"还有哪些抗锯齿技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#还有哪些抗锯齿技术"}},[t._v("#")]),t._v(" 还有哪些抗锯齿技术")]),t._v(" "),s("ul",[s("li",[t._v("快速近似抗锯齿(FXAA)，是一种图像后处理")]),t._v(" "),s("li",[t._v("时间性抗锯齿(TAA)")])]),t._v(" "),s("h2",{attrs:{id:"深度缓存-z-buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度缓存-z-buffer"}},[t._v("#")]),t._v(" 深度缓存(Z-Buffer)")]),t._v(" "),s("h3",{attrs:{id:"画家算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#画家算法"}},[t._v("#")]),t._v(" 画家算法")]),t._v(" "),s("p",[t._v("  场景中有很多物体，要把物体放在场景上涉及到一个顺序的问题。直观的我们应该先把最远的物体放在屏幕上，然后把近的物体补在屏幕上，让它覆盖远处的物体。由远及近画出来得到一个正确的结果，这正是画油画的画家画画的过程。"),s("br"),t._v("\n  在图形学中，假如我们要画一个立方体，运用画家算法，我们可以先画最远的面，然后画周围四个面，左边、下边、右边、上边。但是，如果画周围四个面的时候顺序不对，那么得到的结果是错的。所以画的顺序是很重要的。"),s("br"),t._v("\n  画家算法在一些复杂的情况是无法得到正确的结果的，如下右图。所以实际上广泛采用的是深度缓冲技术。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh32.png"}}),t._v("画家算法")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh33.png"}}),t._v("画家算法做不到的情况")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"什么是深度缓存-z-buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是深度缓存-z-buffer"}},[t._v("#")]),t._v(" 什么是深度缓存(Z-Buffer)")]),t._v(" "),s("p",[t._v("  对空间中三角形不好排一个顺序，但是对于每个像素是比较好排的，如果每个像素能够看到三角形的一部分，那么就可以在这个像素内记录这个像素表示的几何最浅的深度，也就是离我们最近的距离。"),s("br"),t._v("\n  在图形学中，在渲染图像的同时，也会生成另外一个图像，这个图像只存任何一个像素它所看到的几何物体最浅的深度信息，把这个图叫做深度图或者深度缓存。每次渲染都会生成两个不同的结果，一个是最终的结果存在frame buffer中，另一个是存储深度信息存在depth buffer(z-buffer)中。"),s("br"),t._v("\n  因为相机始终是放在圆点并往-z方向看去，所以看到的所有的z都是负的，如果这个数字小，反而离的比较远，这个数字大则离的比较近。为了简化计算，这里换一个概念，相机看过去的深度就是距离相机的距离，这个距离永远都是正的，距离近数值小，距离远数值大。")]),t._v(" "),s("h3",{attrs:{id:"深度缓存举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度缓存举例"}},[t._v("#")]),t._v(" 深度缓存举例")]),t._v(" "),s("p",[t._v("  右边的图像就是深度图的可视化图，距离越远会越白，距离越近越黑。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh34.png",alt:"pic34",title:"深度缓存举例"}})]),t._v(" "),s("h3",{attrs:{id:"深度缓存算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度缓存算法"}},[t._v("#")]),t._v(" 深度缓存算法")]),t._v(" "),s("p",[t._v("  深度缓存，认为一开始所有的像素记录的深度都是无限远的。对于任意一个三角形，都可以光栅化成不同的像素，就可以找到任意一个三角形的任意一个像素。找到对应的像素，这个新的三角形对应的深度就可以与之前深度缓存中的深度值做对比，如果小于深度缓存中的深度值，就把深度缓存中的深度值更新成这个新的深度值，这个像素就应该被画出来。"),s("br"),t._v(" "),s("table",[s("tr",[s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh35.png"}}),t._v("深度缓存算法")])],1),t._v(" "),s("td",[s("center",[s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh36.png"}}),t._v("深度缓存算法案例")])],1)])])]),t._v(" "),s("h3",{attrs:{id:"深度缓存算法复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度缓存算法复杂度"}},[t._v("#")]),t._v(" 深度缓存算法复杂度")]),t._v(" "),s("p",[t._v("  对于n个三角形，复杂度就是O(n)，因为对于任意一个像素都只是在记录当前像素的距离最小值，距离大的直接就舍去了。所以复杂度是O(n)。"),s("br"),t._v("\n  深度缓存算法跟绘画顺序是没有关系的。可以认为浮点型完全不同。"),s("br"),t._v(" "),s("img",{attrs:{src:"/pic/games101/guangshanhua/gsh37.png",alt:"pic37",title:"深度缓存算法复杂度"}})])])}),[],!1,null,null,null);a.default=c.exports}}]);